import Foundation
import SwiftData // üëà 1. ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ

@Model // üëà 2. ‡πÄ‡∏û‡∏¥‡πà‡∏° Macro @Model ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ
final class Member { // üëà 3. ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≤‡∏Å struct ‡πÄ‡∏õ‡πá‡∏ô final class
    @Attribute(.unique) // üëà 4. ‡∏ö‡∏≠‡∏Å‡∏ß‡πà‡∏≤ email ‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô
    var email: String
    
    var id: UUID
    var password: String
    var fullName: String
    var gender: String
    var birthdate: Date
    var birthTime: String
    var phoneNumber: String
    var houseNumber: String
    var carPlate: String
    var meritPoints: Int
    var role: UserRole
    var status: AccountStatus
    var joinedDate: Date
    
    init(
        id: UUID = UUID(),
        email: String,
        password: String,
        fullName: String,
        gender: String,
        birthdate: Date,
        birthTime: String,
        phoneNumber: String,
        houseNumber: String,
        carPlate: String,
        role: UserRole = .user,
        status: AccountStatus = .active,
        joinedDate: Date = Date()
    ) {
        self.id = id
        self.email = email
        self.password = password
        self.fullName = fullName
        self.gender = gender
        self.birthdate = birthdate
        self.birthTime = birthTime
        self.phoneNumber = phoneNumber
        self.houseNumber = houseNumber
        self.carPlate = carPlate
        self.meritPoints = 0 // ‡πÅ‡∏ï‡πâ‡∏°‡∏ö‡∏∏‡∏ç‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ó‡∏µ‡πà 0
        self.role = role
        self.status = status
        self.joinedDate = joinedDate
    }
}
enum UserRole: String, Codable {
    case admin = "Admin"
    case user = "User"
}

enum AccountStatus: String, Codable {
    case active = "Active"
    case suspended = "Suspended"
}
